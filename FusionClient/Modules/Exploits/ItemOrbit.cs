using FC.Utils;
using FusionClient.Core;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using VRC;
using VRC.Core;
using VRC.SDKBase;

namespace FusionClient.Modules
{
    [Obfuscation(Exclude = true, ApplyToMembers = true, StripAfterObfuscation = true)]
    class ItemOrbit : FusionModule
    {
        public static VRC_Pickup[] cached;

        public static bool ItemOrbitToggle = false;

        public override void Update()
        {
            if (!ItemOrbitToggle || VRCPlayer.field_Internal_Static_VRCPlayer_0 == null || FusionClient.Core.UI.Target == null) return;
            if (cached == null)
            {
                Recache();
            }
            GameObject gameObject = new GameObject();
            Transform transform2 = gameObject.transform;
            VRCPlayer targetPlayer2 = FusionClient.Core.UI.Target;
            transform2.position = ((targetPlayer2 != null) ? targetPlayer2.transform.position : VRCPlayer.field_Internal_Static_VRCPlayer_0.transform.position) + new Vector3(0f, Config.Main.ItemOrbitUpDown, 0f);
            gameObject.transform.Rotate(new Vector3(0f, 360f * Time.time * Config.Main.ItemOrbitSpeed, 0f));
            for (int i = 0; i < cached.Length; i++)
            {
                VRC_Pickup vrc_Pickup = cached[i];
                if (Networking.GetOwner(vrc_Pickup.gameObject) != Networking.LocalPlayer)
                {
                    Networking.SetOwner(Networking.LocalPlayer, vrc_Pickup.gameObject);
                }
                vrc_Pickup.transform.position = gameObject.transform.position + gameObject.transform.forward * Config.Main.ItemOrbitSize;
                gameObject.transform.Rotate(new Vector3(0f, 360 / cached.Length, 0f));
            }
            UnityEngine.Object.Destroy(gameObject);
        }

        public override void PlayerLeft(Player instance)
        {
            if (FusionClient.Core.UI.Target == instance)
            {
                FusionClient.Core.UI.ItemOrbitButton.ClickMe();
            }
        }

        public static void Recache()
        {
            cached = UnityEngine.Object.FindObjectsOfType<VRC_Pickup>();
        }
    }
}
